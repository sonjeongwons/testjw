plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id "com.google.cloud.tools.jib" version "3.3.0"
}

group = 'com.cvc'
version = '1.0-SNAPSHOT'

repositories {
	maven {
		url 'http://nexus.sdsdev.co.kr:8081/repository/maven-public/'
		allowInsecureProtocol = true
	}

	// SDS 사내망 시스템은 아래 repo 를 사용하실수 있습니다.
	// You can use the following repo for the sds internal network system.
	maven {
		url 'http://70.121.224.52:8081/nexus/content/repositories/public'
		allowInsecureProtocol = true
	}
	maven {
		url 'http://70.121.224.52:8081/repository/maven-google'
		allowInsecureProtocol = true
	}
	maven {
		url 'http://70.121.224.52:8081/repository/maven-central'
		allowInsecureProtocol = true
	}
	maven {
		url 'http://70.121.224.52:8081/repository/jcenter'
		allowInsecureProtocol = true
	}
	maven {
		url 'http://70.121.224.52:8081/repository/anyframe-java-opensource'
		allowInsecureProtocol = true
	}
	maven {
		url 'http://70.121.224.52:8081/repository/lego'
		allowInsecureProtocol = true
	}

	maven {
		url 'http://70.121.224.52:8081/repository/jcenter/'
		allowInsecureProtocol = true
	}
	maven {
		url 'http://70.121.224.52:8081/repository/redhat-ea-all/'
		allowInsecureProtocol = true
	}
	maven {
		url 'http://70.121.224.52:8081/repository/gradle-plugin/'
		allowInsecureProtocol = true
	}
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation files('libs/ahnlab_v3engine.jar')

	// Validation (javax -> jakarta)
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'

	// Lombok (이미 추가되어 있을 가능성 높음)
	compileOnly 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'

	// Spring Boot Starter Web (기본적으로 포함되어야 함)
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}




나는 위와 같이 build.gradle 파일을 작성했지만, 젠킨스를 실행하면 아래와 같은 에러가 발생해. 왜그러는걸까?






Warning: A secret was passed to "sh" using Groovy String interpolation, which is insecure.
		 Affected argument(s) used the following variable(s): [HARBOR_CREDENTIAL_PSW]
		 See https://jenkins.io/redirect/groovy-string-interpolation for details.
+ gradle jib --no-daemon -Djib.console=plain -Djib.from.image=harbor-paasdev.samsungsdscloud.com/cvc/cvc-scanner-base:17-debian -Djib.from.auth.username=harbor@cvc+cvc-robot -Djib.from.auth.password=**** -Djib.to.image=harbor-paasdev.samsungsdscloud.com/cvc/cvc-scanner:latest -Djib.to.auth.username=harbor@cvc+cvc-robot -Djib.to.auth.password=**** --build-cache

Welcome to Gradle 7.6.4!

Here are the highlights of this release:
 - Added support for Java 19.
 - Introduced `--rerun` flag for individual task rerun.
 - Improved dependency block for test suites to be strongly typed.
 - Added a pluggable system for Java toolchains provisioning.

For more details see https://docs.gradle.org/7.6.4/release-notes.html

To honour the JVM settings for this build a single-use Daemon process will be forked. See https://docs.gradle.org/7.6.4/userguide/gradle_daemon.html#sec:disabling_the_daemon.
Daemon will be stopped at the end of the build 

FAILURE: Build failed with an exception.

* What went wrong:
Could not determine the dependencies of task ':jib'.
> Could not resolve all dependencies for configuration ':runtimeClasspath'.
   > The new Java toolchain feature cannot be used at the project level in combination with source and/or target compatibility

* Try:
> Run with --stacktrace option to get the stack trace.
> Run with --info or --debug option to get more log output.
> Run with --scan to get full insights.

* Get more help at https://help.gradle.org

Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

See https://docs.gradle.org/7.6.4/userguide/command_line_interface.html#sec:command_line_warnings

BUILD FAILED in 22s
