//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package com.fasterxml.jackson.annotation;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Target({ElementType.ANNOTATION_TYPE, ElementType.FIELD, ElementType.METHOD, ElementType.PARAMETER})
@Retention(RetentionPolicy.RUNTIME)
@JacksonAnnotation
public @interface JsonProperty {
    String USE_DEFAULT_NAME = "";
    int INDEX_UNKNOWN = -1;

    String value() default "";

    String namespace() default "";

    boolean required() default false;

    int index() default -1;

    String defaultValue() default "";

    Access access() default JsonProperty.Access.AUTO;

    public static enum Access {
        AUTO,
        READ_ONLY,
        WRITE_ONLY,
        READ_WRITE;

        private Access() {
        }
    }
}






package com.scf.manager.mvc.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@AllArgsConstructor
@NoArgsConstructor
@Data
public class FunctionMetricElementsDTO {

    @JsonProperty("status")
    private String status;
    @JsonProperty("data")
    private DataEntity data;

    @Data
    public static class DataEntity {
        @JsonProperty("resultType")
        private String resultType;
        @JsonProperty("result")
        private List<ResultEntity> result;
    }
    @Data
    public static class ResultEntity {
        @JsonProperty("values")
        private List<List<String>> values;
        @JsonProperty("metric")
        private MetricEntity metric;
    }

    public static class MetricEntity {
    }
}

