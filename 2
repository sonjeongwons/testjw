package com.example.demo.service;

import com.ahnlab.v3engine.V3Const;
import com.ahnlab.v3engine.V3Scanner;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

@Service
public class V3ScannerService {

    private static final String VALID_API_KEY = "your-secure-api-key"; // 실제로는 환경 변수나 설정 파일로 관리하세요.

    public boolean validateApiKey(String apiKey) {
        return VALID_API_KEY.equals(apiKey);
    }

    public Map<String, Object> simpleScan(String filename) {
        Map<String, Object> result = new HashMap<>();
        int ret = V3Scanner.scanFile(filename);
        result.put("filename", filename);
        result.put("returnCode", ret);
        result.put("message", getMessageForReturnCode(ret));
        return result;
    }

    public Map<String, Object> remoteScan(String filename) {
        Map<String, Object> result = new HashMap<>();
        Properties prop = new Properties();
        int ret = V3Scanner.remoteScanFile(filename, prop);

        result.put("filename", filename);
        result.put("returnCode", ret);
        result.put("message", getMessageForReturnCode(ret));
        result.put("details", prop);
        return result;
    }

    public Map<String, Object> detailScan(String filename) {
        Map<String, Object> result = new HashMap<>();
        Properties prop = new Properties();
        int ret = V3Scanner.scanFile(filename, prop);

        result.put("filename", filename);
        result.put("returnCode", ret);
        result.put("message", getMessageForReturnCode(ret));
        result.put("details", prop);
        return result;
    }

    private String getMessageForReturnCode(int ret) {
        switch (ret) {
            case V3Const.RET_AUTH_FAILED:
                return "인증 실패";
            case V3Const.RET_CLIENT_TIMEOUT:
                return "검사 요청 클라이언트 TIMEOUT";
            case V3Const.RET_NETWORK_ERROR:
                return "네트워크 장애";
            case V3Const.RET_CLIENT_FAIL:
                return "검사 요청 클라이언트 오류";
            case V3Const.RET_CANNOT_SCAN:
                return "검사 실패";
            case V3Const.RET_NO_MALWARE:
                return "악성코드 없음";
            case V3Const.RET_MALWARE_FOUND:
                return "악성코드 발견";
            case V3Const.RET_CLEAN_MODIFY_SUCCESS:
                return "수정 치료 성공";
            case V3Const.RET_CLEAN_MODIFY_FAIL:
                return "수정 치료 실패(삭제 권고)";
            case V3Const.RET_CLEAN_DEL_SUCCESS:
                return "삭제 치료 성공";
            case V3Const.RET_CLEAN_DEL_FAIL:
                return "삭제 치료 실패(삭제 권고)";
            case V3Const.RET_CLEAN_DEL_FAIL_BYCONF:
                return "삭제 치료 실패(검사 서버 옵션)";
            default:
                return "알 수 없음";
        }
    }
}
