import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.client.MultipartBodyBuilder;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.http.ResponseEntity;
import org.springframework.core.io.FileSystemResource;

public void scanCodeFile(CodeDTO reqDto) {
    final String url = "https://cvc.private.kr-west1.dev2.samsungsdscloud.com/api/v1/scanner/multipart-scan";

    try {
        // 1. 검사할 파일 가져오기
        String path = reqDto.getPath();
        File file = new File(path);
        if (!file.exists() || !file.isFile()) {
            throw new IllegalArgumentException("유효한 파일이 존재하지 않습니다: " + path);
        }

        // 2. Multipart 요청 본문 구성
        MultipartBodyBuilder builder = new MultipartBodyBuilder();
        builder.part("file", new FileSystemResource(file)).filename(file.getName());

        LinkedMultiValueMap<String, HttpEntity<?>> multipartBody = builder.build();

        // 3. 헤더 설정
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.MULTIPART_FORM_DATA);
        headers.set("X-Subject-Token", tokenScheduler.getAccessToken());

        // 4. API 호출
        ResponseEntity<String> response = httpCallService.callPublicHttpReqeust(
                url,
                "POST",
                multipartBody,
                headers,
                String.class,
                true // 로그 출력 여부
        );

        // 5. 결과 처리
        log.info("[scanCodeFile] 악성코드 검사 요청 성공: status={}, body={}",
                response.getStatusCode(), response.getBody());

    } catch (Exception e) {
        log.error("[scanCodeFile] 악성코드 검사 요청 실패: {}", e.getMessage(), e);
        throw new RuntimeException("악성코드 검사 요청 중 오류가 발생했습니다.", e);
    }
}