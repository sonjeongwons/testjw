여전히 에러 발생하고있어. 현재 상태 및 설정 정보들을 전부 첨부할게.

[root@d2-krw1a-dp-cvc-engine-02 cvc]# docker ps
CONTAINER ID   IMAGE                                                                                                           COMMAND                  CREATED              STATUS              PORTS                                 
                                                                                                                                                                                                                                       
                NAMES
0f931e9629eb   paascommon-edcnnztb.scr.private.kr-west1.dev2.samsungsdscloud.com/cvc/cvc-scanner:latest                        "java -javaagent:/ap…"   About a minute ago   Up About a minute   0.0.0.0:8081->8081/tcp, [::]:8081->808
1/tcp                                                                                                                                                                                                                                  
                cvc-scanner-1
d71bd8257f6b   paascommon-edcnnztb.scr.private.kr-west1.dev2.samsungsdscloud.com/cvc/opentelemetry-collector-contrib:0.118.0   "/otelcol-contrib --…"   About a minute ago   Up About a minute   0.0.0.0:1888->1888/tcp, [::]:1888->188
8/tcp, 0.0.0.0:4317-4318->4317-4318/tcp, [::]:4317-4318->4317-4318/tcp, 0.0.0.0:8888-8889->8888-8889/tcp, [::]:8888-8889->8888-8889/tcp, 0.0.0.0:13133->13133/tcp, [::]:13133->13133/tcp, 0.0.0.0:55679->55679/tcp, [::]:55679->55679/t
cp, 55678/tcp   cvc-otel-collector-1

[root@d2-krw1a-dp-cvc-engine-01 cvc]# docker logs b837fdc4bd26 
2025-05-22T06:57:43.401Zinfoservice@v0.118.0/service.go:164Setting up own telemetry...
2025-05-22T06:57:43.401Zwarnservice@v0.118.0/service.go:213service::telemetry::metrics::address is being deprecated in favor of service::telemetry::metrics::readers
2025-05-22T06:57:43.401Zinfotelemetry/metrics.go:70Serving metrics{"address": "0.0.0.0:8888", "metrics level": "Detailed"}
2025-05-22T06:57:43.401Zinfomemorylimiter@v0.118.0/memorylimiter.go:75Memory limiter configured{"kind": "processor", "name": "memory_limiter", "pipeline": "metrics", "limit_mib": 462, "spike_limit_mib": 92,
 "check_interval": 1}
2025-05-22T06:57:43.403Zinfobuilders/builders.go:26Unmaintained component. Actively looking for contributors. Component will become deprecated after 3 months of remaining unmaintained.{"kind": "exporter", "data_type
": "logs", "name": "opensearch/otel"}
2025-05-22T06:57:43.403Zwarnfilesystemscraper/factory.go:48No `root_path` config set when running in docker environment, will report container filesystem stats. See https://github.com/open-telemetry/opentelemetry-colle
ctor-contrib/tree/main/receiver/hostmetricsreceiver#collecting-host-metrics-from-inside-a-container-linux-only{"kind": "receiver", "name": "hostmetrics", "data_type": "metrics"}
2025-05-22T06:57:43.403Zinfoservice@v0.118.0/service.go:230Starting otelcol-contrib...{"Version": "0.118.0", "NumCPU": 4}
2025-05-22T06:57:43.403Zinfoextensions/extensions.go:39Starting extensions...
2025-05-22T06:57:43.403Zinfoextensions/extensions.go:42Extension is starting...{"kind": "extension", "name": "file_storage/logs"}
2025-05-22T06:57:43.404Zinfoextensions/extensions.go:59Extension started.{"kind": "extension", "name": "file_storage/logs"}
2025-05-22T06:57:43.404Zinfoextensions/extensions.go:42Extension is starting...{"kind": "extension", "name": "basicauth/otel"}
2025-05-22T06:57:43.404Zinfoextensions/extensions.go:59Extension started.{"kind": "extension", "name": "basicauth/otel"}
2025-05-22T06:57:43.404Zinfointernal/resourcedetection.go:126began detecting resource information{"kind": "processor", "name": "resourcedetection/system", "pipeline": "metrics"}
2025-05-22T06:57:43.404Zinfointernal/resourcedetection.go:140detected resource information{"kind": "processor", "name": "resourcedetection/system", "pipeline": "metrics", "resource": {"host.name":"b837fdc4bd26
","os.type":"linux"}}
2025-05-22T06:57:43.404Zinfootlpreceiver@v0.118.0/otlp.go:112Starting GRPC server{"kind": "receiver", "name": "otlp", "data_type": "metrics", "endpoint": "0.0.0.0:4317"}
2025-05-22T06:57:43.404Zinfootlpreceiver@v0.118.0/otlp.go:169Starting HTTP server{"kind": "receiver", "name": "otlp", "data_type": "metrics", "endpoint": "0.0.0.0:4318"}
2025-05-22T06:57:43.404Zinfoadapter/receiver.go:41Starting stanza receiver{"kind": "receiver", "name": "filelog", "data_type": "logs"}
2025-05-22T06:57:43.404Zwarnfileconsumer/file.go:49finding files{"kind": "receiver", "name": "filelog", "data_type": "logs", "component": "fileconsumer", "error": "no files match the configured criteria"}
2025-05-22T06:57:43.406Zinfoprometheusreceiver@v0.118.0/metrics_receiver.go:118Starting discovery manager{"kind": "receiver", "name": "prometheus", "data_type": "metrics"}
2025-05-22T06:57:43.406Zinfotargetallocator/manager.go:184Scrape job added{"kind": "receiver", "name": "prometheus", "data_type": "metrics", "jobName": "otel-collector-b837fdc4bd26"}
2025-05-22T06:57:43.406Zinfoservice@v0.118.0/service.go:253Everything is ready. Begin running and processing data.
2025-05-22T06:57:43.407Zinfoprometheusreceiver@v0.118.0/metrics_receiver.go:187Starting scrape manager{"kind": "receiver", "name": "prometheus", "data_type": "metrics"}
SDK 2025/05/22 06:57:47 WARN falling back to IMDSv1: operation error ec2imds: getToken, http response error StatusCode: 404, request to EC2 IMDS failed
2025-05-22T06:57:47.815Zerrorinternal/queue_sender.go:105Exporting failed. Dropping data.{"kind": "exporter", "data_type": "logs", "name": "awss3/otel", "error": "operation error S3: PutObject, get identity: 
get credentials: failed to refresh cached credentials, no EC2 IMDS role found, operation error ec2imds: GetMetadata, http response error StatusCode: 404, request to EC2 IMDS failed", "dropped_items": 4}
go.opentelemetry.io/collector/exporter/exporterhelper/internal.NewQueueSender.func1
go.opentelemetry.io/collector/exporter@v0.118.0/exporterhelper/internal/queue_sender.go:105
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
go.opentelemetry.io/collector/exporter@v0.118.0/internal/queue/consumers.go:43
2025-05-22T06:57:47.856Zerrorinternal/queue_sender.go:105Exporting failed. Dropping data.{"kind": "exporter", "data_type": "logs", "name": "awss3/otel", "error": "operation error S3: PutObject, get identity: 
get credentials: failed to refresh cached credentials, no EC2 IMDS role found, operation error ec2imds: GetMetadata, http response error StatusCode: 404, request to EC2 IMDS failed", "dropped_items": 6}
go.opentelemetry.io/collector/exporter/exporterhelper/internal.NewQueueSender.func1
go.opentelemetry.io/collector/exporter@v0.118.0/exporterhelper/internal/queue_sender.go:105
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
go.opentelemetry.io/collector/exporter@v0.118.0/internal/queue/consumers.go:43
2025-05-22T06:57:48.268Zerrorinternal/queue_sender.go:105Exporting failed. Dropping data.{"kind": "exporter", "data_type": "logs", "name": "awss3/otel", "error": "operation error S3: PutObject, get identity: 
get credentials: failed to refresh cached credentials, no EC2 IMDS role found, operation error ec2imds: GetMetadata, http response error StatusCode: 404, request to EC2 IMDS failed", "dropped_items": 5}
go.opentelemetry.io/collector/exporter/exporterhelper/internal.NewQueueSender.func1
go.opentelemetry.io/collector/exporter@v0.118.0/exporterhelper/internal/queue_sender.go:105
go.opentelemetry.io/collector/exporter/internal/queue.(*Consumers[...]).Start.func1
go.opentelemetry.io/collector/exporter@v0.118.0/internal/queue/consumers.go:43



# DockerFile 내용
FROM harbor-paasdev.samsungsdscloud.com/cvc/cvc-scanner-base:17-debian

# Proxy 설정
ARG http_proxy=http://70.10.15.10:8080
ARG https_proxy=http://70.10.15.10:8080

ADD sds.crt /usr/local/share/ca-certificates/
RUN update-ca-certificates
RUN sed 's/SECLEVEL=2/SECLEVEL=1/' -i /etc/ssl/openssl.cnf

RUN echo "Acquire::http::proxy \"http://70.10.15.10:8080/\";" >> /etc/apt/apt.conf.d/90proxy
RUN echo "Acquire::https::proxy\"http://70.10.15.10:8080/\";" >> /etc/apt/apt.conf.d/90proxy


RUN apt-get update && \
    apt-get install -y curl ca-certificates telnet vim wget dnsutils && \
    rm -rf /var/lib/apt/lists/*

# OpenTelemetry Java Agent 다운로드
ENV OTEL_AGENT_VERSION=1.33.2
RUN curl -L -o /opentelemetry-javaagent.jar \
    https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v${OTEL_AGENT_VERSION}/opentelemetry-javaagent.jar


# 작업 디렉토리 설정
WORKDIR /app
COPY V3Scanner.properties /app/V3Scanner.properties

# OpenTelemetry Java Agent 복사
COPY opentelemetry-javaagent.jar /app/opentelemetry-javaagent.jar

# 환경변수 설정
ENV JAVA_TOOL_OPTIONS="-javaagent:/app/opentelemetry-javaagent.jar"
ENV OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
ENV OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
ENV OTEL_METRICS_EXPORTER=otlp
ENV OTEL_SERVICE_NAME=cvc-otel-agent
# 트레이스, 로그도 추가 수집하려면 다음도 설정 가능:
ENV OTEL_TRACES_EXPORTER=otlp
ENV OTEL_LOGS_EXPORTER=otlp
ENV no_proxy=localhost,127.0.0.1,otel-collector

# Proxy 설정 제거
RUN rm /etc/apt/apt.conf.d/90proxy
RUN rm /usr/local/share/ca-certificates/sds.crt
RUN update-ca-certificates --fresh
RUN sed 's/SECLEVEL=1/SECLEVEL=2/' -i /etc/ssl/openssl.cnf
~                                                         


# docker-compose.yaml 내용
[root@d2-krw1a-dp-cvc-engine-02 cvc]# cat docker-compose.yaml 
services:
  otel-collector:
    user: "0:0"
    image: paascommon-edcnnztb.scr.private.kr-west1.dev2.samsungsdscloud.com/cvc/opentelemetry-collector-contrib:0.118.0
    volumes:
      - /cvc/otelcol-0.118.0.yaml:/etc/otelcol-contrib/config.yaml
      - /var/lib/otelcol/file_storage/gateway:/var/lib/otelcol/file_storage/gateway
      - /root/.aws:/root/.aws
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    extra_hosts:
      - "cortex-paas.kr-west1.dev2.samsungsdscloud.com:198.18.3.136"
      - "opensearch-paas.kr-west1.dev2.samsungsdscloud.com:198.18.3.136"
      - "object-store.private.kr-west1.dev2.samsungsdscloud.com:198.18.1.29"
  scanner:
    image: paascommon-edcnnztb.scr.private.kr-west1.dev2.samsungsdscloud.com/cvc/cvc-scanner:latest
    ports:
      - 8081:8081
    volumes:
      - /cvc/log:/cvc/log
      - /tmp:/tmp
    environment:
      - CVC_KEYSTONE_ID=cvc-service
      - CVC_KEYSTONE_PW=CVCscanner1!
      - IAM_API_ENDPOINT=https://identity-i.kr-west1.dev2.samsungsdscloud.com/v3/auth/tokens?nocatalog=null
    extra_hosts:
      - "iam-i.kr-west1.dev2.samsungsdscloud.com:198.18.1.136"
      - "identity-i.kr-west1.dev2.samsungsdscloud.com:198.18.1.136"
      - "host.docker.internal:host-gateway"


[root@d2-krw1a-dp-cvc-engine-02 cvc]# cat /root/.aws/credentials 
[default]
aws_access_key_id=EUXCRKPXNTMADQ
aws_secret_access_key=bEWWRSkvBxwIbvbcmvY3z9cngk7MGCXo

# otel-collector.yaml 내용

[root@d2-krw1a-dp-cvc-engine-02 cvc]# cat otelcol-0.118.0.yaml 
extensions:
  basicauth/otel:
    client_auth:
      username: 'cvc_data' # PARAM : connection.env value update
      password: '!CVC_PW123' # PARAM : connection.env value update

  file_storage/logs:
    create_directory: true
    directory: /var/lib/otelcol/file_storage/gateway
    timeout: 1s
    compaction:
      on_rebound: true
      rebound_needed_threshold_mib: 100
      rebound_trigger_threshold_mib: 10
      check_interval: 5s
      cleanup_on_start: true
      directory: /var/lib/otelcol/file_storage/gateway/tmp

processors:
  batch: {}
  memory_limiter:
    check_interval: 1s
    limit_mib: 462
    limit_percentage: 80
    spike_limit_mib: 92
    spike_limit_percentage: 25
  resourcedetection/system:
    detectors: ["system"]
    system:
      hostname_sources: ["os"]
  resource:
    attributes:
      - key: "lma-tenant"
        value: "cvc"  # PARAM :: vmdb1
        action: insert
      - key: "node.ip"
        value: '${env:HOSTNAME}'
        action: insert
  transform:
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["host.name"], resource.attributes["host.name"])
          - set(attributes["node.ip"], resource.attributes["node.ip"])
          - set(attributes["process.command"], resource.attributes["process.command"])
          - set(attributes["process.command_line"], resource.attributes["process.command_line"])
          - set(attributes["process.executable.name"], resource.attributes["process.executable.name"])
          - set(attributes["process.executable.path"], resource.attributes["process.executable.path"])
          - set(attributes["process.owner"], resource.attributes["process.owner"])
          - set(attributes["process.parent_pid"], resource.attributes["process.parent_pid"])
          - set(attributes["process.pid"], resource.attributes["process.pid"])

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: '0.0.0.0:4317'
      http:
        endpoint: '0.0.0.0:4318'

  # METRIC Reciever START
  hostmetrics:
    collection_interval: 30s
    root_path:
    scrapers:
      cpu:
        metrics:
          system.cpu.logical.count:
            enabled: true
          system.cpu.utilization:
            enabled: true
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
          system.memory.limit:
            enabled: true
      load:
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      network:
      paging:
      processes:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector-${env:HOSTNAME}'  # PARAM :: -db1 
          scrape_interval: 30s # default 5s
          static_configs:
            - targets: ['0.0.0.0:8888']
  # METRIC Reciever END

  # LOG Reciever START
  filelog:
    exclude:
    - /var/log/pods/lma_agent-opentelemetry-collector*_*/opentelemetry-collector/*.log
    include:
    - /cvc/log/scanner*.log
    include_file_name: false
    include_file_path: true
    retry_on_failure:
      enabled: true
    start_at: end
  # LOG Reciever END

exporters:
  debug: {}
  # if you need to debug log on pod, use this exporters on piplines
  prometheusremotewrite/otel:
    endpoint: "https://cortex-paas.kr-west1.dev2.samsungsdscloud.com/api/v1/push" # vmware cortex remote write url
    tls:
      insecure: true
    external_labels:
      otel_collector: server
      node_name: '${env:HOSTNAME}'
      node_ip: '${env:HOSTNAME}'
    headers:
      X-Scope-OrgID: 'cvc' # PARAM :: cortex tenant id.
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 24h
    remote_write_queue:
      enabled: true
      queue_size: 10000
    # timeout: 5s
  opensearch/otel:
    # Index Pattern will be : ss4o_{type}-{dataset}-{namespace}
    #dataset: apps
    #namespace: otel
    # If use this, pattern will be {logs_index}
    logs_index: cvc-logs
    http:
      tls:
        insecure_skip_verify: true
      endpoint: https://opensearch-paas.kr-west1.dev2.samsungsdscloud.com
      timeout: 2m
      headers:
        #Content-Type: "application/json"
      auth:
        authenticator: basicauth/otel
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 24h
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 100000
      storage: file_storage/logs
    # timeout: 5s
  awss3/otel:
    s3uploader:
      region: 'kr-west1'
      s3_bucket: 'paas-lma-logs'
      s3_prefix: 'cvc'
      s3_partition: 'hour'
      s3_force_path_style: true
      disable_ssl: true
      endpoint: 'https://object-store.private.kr-west1.dev2.samsungsdscloud.com'
    sending_queue:
      enabled: true
      num_consumers: 1
      queue_size: 100000
      storage: file_storage/logs
service:
  extensions:
    - basicauth/otel
    - file_storage/logs
  telemetry:
    metrics:
      address: 0.0.0.0:8888
      level: detailed
  pipelines:
    logs:
      exporters: [opensearch/otel, awss3/otel]
      processors: [resource, transform, memory_limiter, batch]
      receivers: [otlp, filelog]
    metrics:
      exporters: [prometheusremotewrite/otel]
      processors: [resourcedetection/system, resource, transform, memory_limiter, batch]
      receivers: [otlp, hostmetrics, prometheus]
