[root@d2-krw1a-dp-cvc-engine-01 entrypoints]# ls -al
total 4
drwxr-xr-x 2 root root   29 Aug 14 19:03 .
drwxr-xr-x 6 root root  175 Aug 18 11:30 ..
-r-xr-xr-x 1 root root 1181 Aug 14 19:03 with-secrets.sh
[root@d2-krw1a-dp-cvc-engine-01 entrypoints]# cat with-secrets.sh 
#!/bin/sh
# 최소 권한(0555)로 배포, set -x 금지, 출력 금지

# 안전한 읽기 함수: 파일 존재/권한만 검사, 값은 출력/로그 금지
read_secret() {
  f="$1"
  [ -r "$f" ] || { echo "secret not readable: $f" >&2; exit 1; }
  # shellcheck disable=SC2002
  cat "$f"
}

# 필요한 경우에만 export. 값은 절대 echo/printf로 출력하지 않음.
[ -f /run/secrets/aws_access_key_id ]       && export AWS_ACCESS_KEY_ID="$(read_secret /run/secrets/aws_access_key_id)"
[ -f /run/secrets/aws_secret_access_key ]   && export AWS_SECRET_ACCESS_KEY="$(read_secret /run/secrets/aws_secret_access_key)"
[ -f /run/secrets/cvc_keystone_id ]         && export CVC_KEYSTONE_ID="$(read_secret /run/secrets/cvc_keystone_id)"
[ -f /run/secrets/cvc_keystone_pw ]         && export CVC_KEYSTONE_PW="$(read_secret /run/secrets/cvc_keystone_pw)"

# 추가로, SDK 표준 경로 사용이 필요하면 여기에 설정 (값 자체는 비밀이 아님)
# export AWS_SHARED_CREDENTIALS_FILE=/run/secrets/aws_credentials
# export AWS_PROFILE=default

# 프로세스를 교체하여 환경변수만 남기고 쉘은 종료 (ps에 쉘 인자/히스토리 최소화)
exec "$@"
[root@d2-krw1a-dp-cvc-engine-01 entrypoints]# pwd
/cvc/entrypoints
[root@d2-krw1a-dp-cvc-engine-01 entrypoints]# cd ..
[root@d2-krw1a-dp-cvc-engine-01 cvc]# ls
data-prepper-config.yaml  docker-compose.yaml  entrypoints  log  otelcol-0.118.0.yaml  pipelines.yaml  secrets
[root@d2-krw1a-dp-cvc-engine-01 cvc]# 

