package com.scf.manager.mvc.dto;

import com.scf.manager.base.dto.SearchParamDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.*;

import jakarta.validation.constraints.NotBlank;
@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class BaseImageDTO {

	private Long baseImageSeq;
	private String name;
	private String version;

	@Data
	@EqualsAndHashCode(callSuper = false)
	@AllArgsConstructor
	@NoArgsConstructor
	@Builder
	public static class Search extends SearchParamDTO {
		@Schema(description = "이미지명을 입력해주세요")
		private String name;
	}
	@Data
	@EqualsAndHashCode(callSuper = false)
	@AllArgsConstructor
	@NoArgsConstructor
	@Builder
	public static class Register {

		@NotBlank(message = "리파지토리를 입력해주세요")
		@Schema(description = "리파지토리 입력해주세요")
		private String repository;
		@NotBlank(message = "이미지명을 입력해주세요")
		@Schema(description = "이미지명을 입력해주세요")
		private String name;
		@NotBlank(message = "버전을 입력해주세요")
		@Schema(description = "버전")
		private String version;
    }
	@Data
	@AllArgsConstructor
	@NoArgsConstructor
	@Builder
	public static class Modify {
		@NotBlank(message = "리파지토리를 입력해주세요")
		@Schema(description = "리파지토리 입력해주세요")
		private String repository;

		@NotBlank(message = "이미지명을 입력해주세요")
		@Schema(description = "이미지명")
		private String name;
		@NotBlank(message = "버전을 입력해주세요")
		@Schema(description = "버전")
		private String version;

	}
	@Data
	@AllArgsConstructor
	@NoArgsConstructor
	@Builder
	public static class Response {

		@NotBlank(message = "리파지토리를 입력해주세요")
		@Schema(description = "리파지토리 입력해주세요")
		private String repository;

		@Schema(description = "베이스이미지일련번호")
		private Long baseImageSeq;

		@Schema(description = "이미지명")
		private String name;

		@Schema(description = "버전")
		private String version;
	}

}
