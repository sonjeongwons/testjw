create table TBL_ALLOW_IP
(
    allow_ip_seq bigserial not null,
    create_at    timestamp,
    creator_seq  int8,
    modifier_seq int8,
    modify_at    timestamp,
    name         varchar(255),
    ip_type      varchar(1),
    function_seq int8,
    primary key (allow_ip_seq)
);


create table TBL_BASE_IMAGE
(
    base_image_seq bigserial not null,
    create_at      timestamp,
    creator_seq    int8,
    modifier_seq   int8,
    modify_at      timestamp,
    name           varchar(255),
    repository     varchar(255),
    version        varchar(255),
    primary key (base_image_seq)
);


create table TBL_FUNCTION
(
    function_seq    bigserial not null,
    create_at       timestamp,
    creator_seq     int8,
    modifier_seq    int8,
    modify_at       timestamp,
    del_yn          varchar(255),
    del_at          timestamp,
    display_name    varchar(255),
    function_key    varchar(255) unique,
    function_status varchar(255),
    account_id      varchar(255),
    region          varchar(255),
    runtime         varchar(255),
    user_id         varchar(255),
    created_yn      varchar(255),
    modifier_id     varchar(255),
    member_seq      int8,
    primary key (function_seq)
);


create table TBL_FUNCTION_ENVIRONMENT
(
    function_environment_seq bigserial not null,
    create_at                timestamp,
    creator_seq              int8,
    modifier_seq             int8,
    modify_at                timestamp,
    key                      varchar(1000),
    type                     varchar(255),
    value                    varchar(255),
    function_seq             int8,
    primary key (function_environment_seq)
);

create table TBL_FUNCTION_CONFIG (
    function_config_seq bigserial not null,
    create_at timestamp,
    creator_seq int8,
    modifier_seq int8,
    modify_at timestamp,
    memory int8,
    timeout int8,
    min_scale int8,
    max_scale int8,
    function_seq int8,
    primary key (function_config_seq)
);

create table TBL_FUNCTION_VARIABLE (
    function_variable_seq bigserial not null,
    create_at timestamp,
    creator_seq int8,
    modifier_seq int8,
    modify_at timestamp,
    key varchar(1000),
    value varchar(255),
    function_seq int8,
    primary key (function_variable_seq)
);

create table TBL_KEY_MANAGER
(
    key_manager_seq bigserial not null,
    create_at       timestamp,
    creator_seq     int8,
    modifier_seq    int8,
    modify_at       timestamp,
    jwk             jsonb unique,
    function_seq    int8,
    primary key (key_manager_seq)
);

create table TBL_MEMBER
(
    member_seq   bigserial not null,
    create_at    timestamp,
    creator_seq  int8,
    modifier_seq int8,
    modify_at    timestamp,
    name         varchar(255),
    password     varchar(255),
    role_type    varchar(255),
    del_yn       varchar(255),
    primary key (member_seq)
);


create table TBL_FUNCTION_BLUEPRINT
(
    function_blueprint_seq bigserial    not null,
    create_at              timestamp,
    creator_seq            int8,
    modifier_seq           int8,
    modify_at              timestamp,
    blueprint_name         varchar(255),
    runtime                varchar(255),
    version                varchar(255),
    blueprint_code_text    TEXT,
    blueprint_description  varchar(255),
    default_yn             varchar(255) not null default 'N',
    primary key (function_blueprint_seq)
);


create table TBL_MAPPING
(
    mapping_seq  bigserial not null,
    create_at    timestamp,
    creator_seq  int8,
    modifier_seq int8,
    modify_at    timestamp,
    function_seq int8,
    trigger_seq  int8,
    primary key (mapping_seq)
);

create table TBL_TRIGGER
(
    trigger_seq            bigserial not null,
    create_at              timestamp,
    creator_seq            int8,
    modifier_seq           int8,
    modify_at              timestamp,
    trigger_type           varchar(255) not null,
    trigger_name           varchar(255) not null,
    trigger_target_srn     text not null,
    trigger_target_uuid    varchar(255) not null,
    trigger_sid            varchar(255),
    trigger_target_account varchar(255),
    mapping_seq            int8,
    primary key (trigger_seq)
);

create table TBL_TRIGGER_CRON
(
    trigger_cron_seq bigserial not null,
    create_at        timestamp,
    creator_seq      int8,
    modifier_seq     int8,
    modify_at        timestamp,
    timezone         varchar(255),
    schedule         varchar(255),
    trigger_seq      int8,
    primary key (trigger_cron_seq)
);


create table TBL_FUNCTION_URL
(
    function_url_seq    bigserial    not null,
    create_at           timestamp,
    creator_seq         int8,
    modifier_seq        int8,
    modify_at           timestamp,
    url_enable_yn       varchar(255) not null default 'N',
    public_endpoint_url varchar(255),
    auth_type           varchar(255),
    public_ip_ac_yn     varchar(255),
    complete_yn         varchar(255),
    function_seq        int8,
    primary key (function_url_seq)
);

create table TBL_FUNCTION_CODE
(
    function_code_seq bigserial not null,
    create_at         timestamp,
    creator_seq       int8,
    modifier_seq      int8,
    modify_at         timestamp,
    code_type         varchar(255),
    class_name        varchar(255),
    method_name       varchar(255),
    function_seq      int8,
    primary key (function_code_seq)
);


create table TBL_CODE_TEXT
(
    code_text_seq     bigserial not null,
    create_at         timestamp,
    creator_seq       int8,
    modifier_seq      int8,
    modify_at         timestamp,
    code_text         TEXT,
    function_code_seq int8,
    primary key (code_text_seq)
);


create table TBL_CODE_FILE
(
    code_file_seq        bigserial not null,
    create_at            timestamp,
    creator_seq          int8,
    modifier_seq         int8,
    modify_at            timestamp,
    file_name            varchar(255),
    file_upload_at       timestamp,
    file_transfer_status varchar(255),
    function_code_seq    int8,
    primary key (code_file_seq)
);


-- ALLOWIP 관련
ALTER TABLE TBL_ALLOW_IP ADD CONSTRAINT ip_type CHECK (ip_type IN ('I', '') OR ip_type IS NULL);


alter table TBL_ALLOW_IP
    add constraint fk_allow_ip_refer_pk_function
        foreign key (function_seq)
            references TBL_FUNCTION;

-- ALLOW IP 관련 끝

alter table TBL_FUNCTION
    add constraint fk_function_refer_pk_member
        foreign key (member_seq)
            references TBL_MEMBER;


alter table TBL_FUNCTION_ENVIRONMENT
    add constraint fk_function_environment_refer_pk_function
        foreign key (function_seq)
            references TBL_FUNCTION;

alter table TBL_FUNCTION_CONFIG
    add constraint fk_function_config_refer_pk_function
        foreign key (function_seq)
            references TBL_FUNCTION;

alter table TBL_FUNCTION_VARIABLE
    add constraint fk_function_variable_refer_pk_function
        foreign key (function_seq)
            references TBL_FUNCTION;

alter table TBL_KEY_MANAGER
    add constraint fk_key_manager_refer_pk_function
        foreign key (function_seq)
            references TBL_FUNCTION;

alter table TBL_FUNCTION_URL
    add constraint fk_function_url_refer_pk_function
        foreign key (function_seq)
            references TBL_FUNCTION;


alter table TBL_FUNCTION_CODE
    add constraint fk_function_code_refer_pk_function
        foreign key (function_seq)
            references TBL_FUNCTION;


alter table TBL_CODE_TEXT
    add constraint fk_code_text_refer_pk_function_code
        foreign key (function_code_seq)
            references TBL_FUNCTION_CODE;


alter table TBL_CODE_FILE
    add constraint fk_code_file_refer_pk_function_code
        foreign key (function_code_seq)
            references TBL_FUNCTION_CODE;


alter table TBL_TRIGGER
    add constraint fk_trigger_refer_pk_mapping
        foreign key (mapping_seq)
            references TBL_MAPPING;

-- TBL_MAPPING 추가

ALTER TABLE TBL_MAPPING
    ADD CONSTRAINT fk_mapping_refer_pk_function
        FOREIGN KEY (function_seq)
        REFERENCES TBL_FUNCTION (function_seq);

-- trigger_seq에 대한 외래 키 제약 조건 추가
ALTER TABLE TBL_MAPPING
    ADD CONSTRAINT fk_mapping_refer_pk_trigger
        FOREIGN KEY (trigger_seq)
        REFERENCES TBL_TRIGGER (trigger_seq);


-- Mapping 관련 끝
alter table TBL_TRIGGER_CRON
    add constraint fk_trigger_cron_refer_pk_trigger
        foreign key (trigger_seq)
            references TBL_TRIGGER;



-- Trigger 테이블 인덱스 설정
-- trigger_type 컬럼에 단일 인덱스
CREATE INDEX idx_trigger_trigger_type ON TBL_TRIGGER (trigger_type);

-- trigger_name 컬럼에 단일 인덱스
CREATE INDEX idx_trigger_trigger_name ON TBL_TRIGGER (trigger_name);

-- triggerType && triggerName 인덱스
CREATE INDEX idx_trigger_type_name ON TBL_TRIGGER (trigger_type, trigger_name);

-- trigger_SRN 컬럼에 단일 인덱스
CREATE INDEX idx_trigger_trigger_SRN ON TBL_TRIGGER (trigger_target_srn);
