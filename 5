import "errors"

var ErrNatIPCheckExceeded = errors.New("NAT IP 재시도 초과")




// NAT IP 실패 → Manager에게 NOT_READY 전송
statusMessage := map[string]string{"functionStatus": "NOT_READY"}
err := sendStatusToManager(managerEndpoint, statusMessage, scfWatcher.Spec.KsvcName)
if err != nil {
	logger.Error(err, "Manager에게 NAT IP 실패 상태 전송 실패")
	return err // 이건 진짜 실패
}

logger.Info("Manager에게 NOT_READY 상태 전송 완료 (NAT IP 실패)")

// 여기서는 정상적인 처리이지만 이후 로직 건너뛰기 위해 특수 에러 반환
return ErrNatIPCheckExceeded




err := r.checkAndNotifyNATIP(ctx, &scfWatcher)
if err != nil {
	logger.Error(err, "NAT IP 확인 및 알림 실패")

	// NAT IP 재시도 초과로 인해 의도적으로 종료
	if errors.Is(err, ErrNatIPCheckExceeded) {
		logger.Info("NAT IP 실패로 Manager에게 NOT_READY 전송 후 Reconcile 종료")
		return ctrl.Result{}, nil
	}

	// 그 외는 진짜 에러로 처리
	return ctrl.Result{}, err
}



