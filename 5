curl 값에 대해서 response 값은 아래와 같아.
curl -vs -X GET -H "X-Auth-Token: gAAAAABoLvGeEgUEKdCMejFl8Dkdci_JuhShTWanD59xXFj_yMbhEYX758RtztRBrtU1Txh16Ye-qKjP1E2xmIM1phZigeAziSvdoSwkbZIO6YEOvskbBwZBWfQ7EvoQNS2yJckdam1tzunxAHejxQFNW-CEFJQ0f2_YBadyaCVXcjq5u09cZ1g" -H "X-Subject-Token: gAAAAABoLvAmOa76h5iqk__dhc1XkOKGTgYOAxZxsuTxSB7AMWXdZdqaXEct3B8ZSBrS_EjgDEUTS7O0o-bAXA5a0LOnoO_xJgs3SGVzSQ7e-0Dnh8HNk9VxdrO_EAPMP3QpNBqUtqetzMLLCaW0TiRRt9_3a339gMVrZu7LpgJBGeygJsibehA" \
"https://identity-i.kr-west1.dev2.samsungsdscloud.com/v3/auth/tokens?nocatalog=null"



{
  "token": {
    "methods": [
      "password"
    ],
    "user": {
      "domain": {
        "id": "0860cdd74e06475395d29f14848cba22",
        "name": "service"
      },
      "id": "b5a83c42cf204d74842c6f0bc2fbb08a",
      "name": "scf-service",
      "password_expires_at": null
    },
    "audit_ids": [
      "27g4UrWUTdOSPO439FlQvQ"
    ],
    "expires_at": "2025-05-22T21:36:38.000000Z",
    "issued_at": "2025-05-22T09:36:38.000000Z",
    "project": {
      "domain": {
        "id": "0860cdd74e06475395d29f14848cba22",
        "name": "service"
      },
      "id": "33b532c466824bcf9324101a3c6f3015",
      "name": "service-dp-scf"
    },
    "is_domain": false,
    "roles": [
      {
        "id": "521b706a398243f281f7e4b98296f671",
        "name": "admin"
      },
      {
        "id": "a5c62ffa0e7a4ccca077094e64ecc35a",
        "name": "reader"
      },
      {
        "id": "cbf6c7f89b084734927bd40bf8ce0681",
        "name": "member"
      },
      {
        "id": "0b0467920fe04cbd9d479e2eab84575a",
        "name": "manager"
      }
    ]
  }
}


자바코드에서 validateToken 메소드 수행 후에 위 response같은 값들을 전달받게되는데, response값이 지금처럼 2xx이고, roles 내 name이 admin이 있는 response인 경우에만 true를 반환하는 validateToken을 개선해봐
package com.cvc.scanner.service;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.*;
import org.springframework.stereotype.Service;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.HttpServerErrorException;
import org.springframework.web.client.RestTemplate;

import java.util.List;
import java.util.Map;

@Service
public class TokenService {

    @Value("${cvc.service.id}")
    private String cvcServiceId;

    @Value("${cvc.service.pw}")
    private String cvcServicePw;

    @Value("${iam.api.endpoint}")
    private String iamApiEndpoint;

    private final RestTemplate restTemplate;

    public TokenService(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    public String getCvcAdminToken() {
        //String url = iamApiEndpoint + "/v3/auth/tokens?nocatalog=null";
        String url = iamApiEndpoint;

        Map<String, Object> body = Map.of(
                "auth", Map.of(
                        "identity", Map.of(
                                "methods", List.of("password"),
                                "password", Map.of(
                                        "user", Map.of(
                                                "name", cvcServiceId,
                                                "domain", Map.of("name", "service"),
                                                "password", cvcServicePw
                                        )
                                )
                        )
                )
        );

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        HttpEntity<Map<String, Object>> request = new HttpEntity<>(body, headers);

        ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.POST, request, String.class);
        return response.getHeaders().getFirst("X-Subject-Token");
    }
    public boolean validateToken(String userToken) {
        //String url = iamApiEndpoint + "/v3/auth/tokens?nocatalog=null";
        String url = iamApiEndpoint;
        String adminToken = getCvcAdminToken();

        HttpHeaders headers = new HttpHeaders();
        headers.set("X-Auth-Token", adminToken);
        headers.set("X-Subject-Token", userToken);

        HttpEntity<Void> request = new HttpEntity<>(headers);

        try {
            ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.GET, request, String.class);
            return response.getStatusCode().is2xxSuccessful();
        } catch (HttpClientErrorException | HttpServerErrorException e) {
            return false;
        }
    }
}
